===============================================================
note for set up php
===============================================================

OS X come with pre-packed php
need to set path in .bash_profile if you are not using default one
If you need to reset which php.ini being used on CLI
    export PHPRC = to/your/desired/php.ini on .bash_profile
    or set specific ini on command (i.e. C:\php\cli\php.exe -c C:\php\php.ini myscript.php)
    
    http://php.net/configuration.file
    https://stackoverflow.com/questions/10844641/how-to-change-the-path-to-php-ini-in-php-cli-version
    https://stackoverflow.com/questions/3057110/where-can-i-find-the-php-ini-for-php-cli?noredirect=1&lq=1

=================================================
David J Malan  (extremely good)
https://www.youtube.com/watch?v=h2Nq0qv0K8M
=================================================

PHP

TCP and etc protocol for many hand shakes on backend.

Apache is
    Popular web server software
    Httpd
    D - damon
    Apache has ability to run on a server, listen on 1, or multiple ip address.
    It is not uncommon for one server to have multuple network cards 
    or one network cards wwith multiple network address often for redandancy purpose.

    Let's say:
        You have 2 servers listening to one exactly the same,
        When the event of disaster, you make sure that give the back-up server that prime server's ip address, 
        so the back-up server now listening on both prime and client servers. 
        Relevantly, web server is actually configured to be listening on multiple ips

    80 denote       http
    25 denotes      mail / smtp
    21              FTP
    8000, 8080 -    people often use
    0-1024 is       reserved so should not use.
    1025-65000 -    free to  use
    
    Port number will be used to recognise what service you want specifically.
    The envelop - the request also contents port

    You need configure DNS - webname and ip adress
 


=================================================================
https://www.youtube.com/watch?v=NnC0N7LJ9PI
(old video but good explanation)
=================================================================


$_GET[]; -------------------------------------------------------
// means that whatever in the input field from browser

        $name = $_GET[‘name’];
                So it means that on the browser there would be 
                localhost/filename/fileName.php?name=Tom

                ? indicate Get method and in there name=Tom

        You can make html form and input as
                <form action=”fileName.php” method=”get”>
                <b> Enter Your Name </b>
                <input type = “text” name=”name”>  
                <input type = “submit”>
                </form>

         +++ php looks at the name attribute which corresponding to the variable inside $_GET[‘name’];
         +++ So if the name attribute was ="use" you need to set as $_GET[“user”]


$_POST[] ------------------------------------------------------------------------
// pretty the same to get method 

        $username = $_POST['userName'];
        $password = $_POST['password'];

        <form>
        action attribute = the php file you wrote
        method attribute "POST"

        <input> make sure name attribute is exactly the same as inside of $_POST[];
        
        
function ---------------------------------------------------------------------------
        the same as JS
            function fn ($name)
            {
                echo "welcome".$name;
            }

Date & Time ----------------------------------------------------------------------

        http://php.net/manual/en/function.date.php

        // bool date_default_timezone_set ( string $timezone_identifier )
        // date_default_timezone_set() sets the default timezone used by all date/time functions.
            date_default_timezone_set('UTC');

        // Prints something like: Monday
            echo date("l");

        // Prints something like: Monday
            echo date("l");
        
Explode() -------------------------------------------------------------------------------
// bit like split o JS

        Example #1:
            array explode ( string $delimiter , string $string [, int $limit = PHP_INT_MAX ] )
            $data = "foo:*:1023:1000::/home/foo:/bin/sh";

        Example #2:
            list($user, $pass, $uid, $gid, $gecos, $home, $shell) = explode(":", $data);
            echo $user; // foo
            echo $pass; // *

        Example #3 limit parameter examples

            <?php
                $str = 'one|two|three|four';

                // positive limit
                print_r(explode('|', $str, 2));

                // negative limit (since PHP 5.1)
                print_r(explode('|', $str, -1));
            ?>
                Out put is -------------------    
                Array
                (
                    [0] => one
                    [1] => two|three|four
                )
                Array
                (
                    [0] => one
                    [1] => two
                    [2] => three
                )
                --------------------------------

 
 strpos() ---------------------------------
 //similler to  indexOf (JS) but on string
                     = assign
                     == if equal to
                     === check type as well as value
                     
        &search = strpos ($hay, $needle)
        it returns that position of $needle in $hay
        if not return FALSE
      

================================================================
learn php 
lynda.com - general basic of php
================================================================

php request to server
server sends the page to the Zend engine that powers php processing
befor sending the response to the browser
if database involved, Zend engine is sending the request of the data base
then processing the result

php often mixed or enbedded in HTML mark up with <?php ?> tag


basics ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        
; always need where need to execute
if you have only one command in php block, it is perfectly legal

comment // or #, /* */ for multiple lines

variable ------------------------------------------------------------------

    always begin with $ then conbination of letters, numbers ans the underscore
    (but no numbers straight after $) 
    Case sensitive
    use camel case or _ between word
    reserved names (http://www.php.net/manual/en/reserved.variables.php)
    dot for decimal number        
        
string:
        (the same as JS)
        you can use both '' and  ""
        use \for escape
        "" for incorporate a value in a string
            also process escape sequences like \n,\r, \t, \\, \$
        '' simply process $ as '$' not variable
            only process escape sequence of \'
        over all less \ is better
        
        concatination - '.' (dot)
            you can use like .= just like +=
            
        when you are displaying single string (within html), you can use
        <?= $name ?>
        instead of <? php echo $name ?>
        
        <<< EOT (you can use whatever variable here - good practice to be all uppercase)
            this block will be closes with EOT;
            with in it, you can just type a string. you can use '' "" and variales,
            all interpreted correctly by php.
            Useful query on SQL
                $heredoc = <<< EOT
                In "$title" by $author, $android the "paranoid android" complains that he's got "a brain $brain_size."
                EOT;
                echo $heredoc;
                // makesure nothing after EOT & ; 
        

array; 
        $charactors = array ('a', 'b', 'c'); // traditinal way
        you cannot echo, instead
        print_r ($charactors);
        // output as  Array ([0]=>a [1]=>b [2]=>c)
      
        $charactors = ['a', 'b', 'c']; // php5.4 or later 
        // output will be the same
        $charactors [] = 'd'; 
        $charactors [] = 'e';
        // will be assigned to next available array
        // output as  Array ([0]=>a [1]=>b [2]=>c [3]=>d [4]=>d)
        echo $charactors[1]
        // out put b


associative array;
        key value pair
        $description =[
            'ichi'=>'Japanese'
            'lala'=>'song'
        ];
        echo $description['ichi']; //Japanese
        $description['pink']='color';
        print_r($description) //Array([ichi]=>Japanese [lala]=>song [pink]=>color

        you cannot embedded associative array directly into ""
        you can put {} around it "Lovely {$descriptiom['pink']}"
        
        
 print vs echo (and others) -------------------------------------------------------------------
 
        print for single value, 
        echo for multiple with ,
            echo $number, " ", $name;
        
        echo

            Outputs one or more strings separated by commas
            No return value
            e.g. echo "String 1", "String 2"

        print

            Outputs only a single string
            Returns 1, so it can be used in an expression
            e.g. print "Hello"
            or, if ($expr && print "foo")

        print_r()

            Outputs a human-readable representation of any one value
            Accepts not just strings but other types including arrays and objects, 
            formatting them to be readable
            Useful when debugging
            May return its output as a return value (instead of echoing) 
            if the second optional argument is given
        
        var_dump()

            Outputs a human-readable representation of one or more values separated by commas
            Accepts not just strings but other types including arrays and objects, 
            formatting them to be readable
            Uses a different output format to print_r(), for example it also prints the type of values
            Useful when debugging
            No return value
        
        var_export()

            Outputs a human-readable and PHP-executable representation of any one value
            Accepts not just strings but other types including arrays and objects, 
            formatting them to be readable
            Uses a different output format to both print_r() and var_dump() 
            - resulting output is valid PHP code!
            Useful when debugging
            May return its output as a return value (instead of echoing) 
            if the second optional argument is given
            
        Notes:

        Even though print can be used in an expression, 
        recommend people avoid doing so, because it is bad for code readability 
        (and because it's unlikely to ever be useful). 
        The precedence rules when it interacts with other operators can also be confusing. 
        Because of this, I personally don't ever have a reason to use it over echo.
        Whereas echo and print are language constructs, print_r() and var_dump()/var_export() are regular functions. 
        You don't need parentheses to enclose the arguments to echo or print 
        (and if you do use them, they'll be treated as they would in an expression).
        While var_export() returns valid PHP code allowing values to be read back later, 
        relying on this for production code may make it easier to introduce security vulnerabilities due to the need to use eval(). 
        It would be better to use a format like JSON instead to store and read back values. 
        The speed will be comparable.
        
        

Conditions ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Boolians ---------------------------------------
    
        implicit boolian values
        php regards the folloing as implicity false
            zero as a number or string(0, 0.0, '0')
            An empty string (' ', " ')
            An empty array
            NULL (incl. unset variables)
            A simpleXML object created from empty tag

        Everything else true
    
    
condition ---------------------------------------
     
        if (first condition){
        }elseif (second condition){
        }else{
        }

        +++ on the condition you can use : instead of {}, then use endif; at the end

            if ($name == 'Arthur') :
                echo 'I could never get that.';
            elseif ($name == 'Marvin') :
                echo "I've got this terrible pain.";
            else :
                echo 'well...';
            endif;
    
switch -------------------------------------------

        switch($var){
            case value1:
        }
        *** if you don't use break it will execute all the cases 
        switch ($name) {
        case 'Arthur':
            echo 'I could never get that';
            break;
        case 'Marvin':
        case 'Paranoid Android':
        case 'robot':
            echo "I've got this terrible pain.";
            break;
        default:
            echo 'well...';
    
Ternary operator -----------------------------------*****
(?:)
        $var = (condition)? value if true: value if false;

        $unit_cost = 0;
        $wholesale_price = $unit_cost ?: 25;  
        // if $unit_cost is true assign the value to $wholesale_price
        // this is falise so 25 will be assigned
        echo $wholesale_price;

        ?? null-coalease operator  (php 7)*********************
            $wholesale_price = $unit_cost ?? 25; 
            // you don't get error message when you assign nothing on $unit_cost
            // it only cocerns no value assigned NOTHING ELSE
            // $unit_cost = 0; is actual value in this case
            $wholesale_price = $unit_cost ?? $non_value ?? 25; 
            // you can chain it, takes first true value

         useful tip
         <?php if ($member) : ?>
            // some html here
            // if $member is true it displays
         <?php endif; ?>


Operaters ----------------------------------------------------

        compare:
             == equal, === identical (the same type), != not wual, !== not identical

        logical operation:
            && and, || or ! not

        Arithmetic Operators:
            (the same as JS)
            - Negation and Substruction
            + Addition
            * Multiplication
            ** Sxponention (php5.6 or later -  or pow ($a, $b))
            / Division
            % Modules 
                if you use % on float. floart will be convert to int first (cut off decimal num)

        Combined arithmetic / Increment and Decrement operaters are the same as JS
            such as 
            $total = 1;             // 1
            $total +=2;             // 3
            $total++;               // 4
            $result = $total++ * 2  // 8 as ++ will be added after culcuration
            echo $total ;           // 5 as ++ will be done after assined to $result

        intdiv($totalNumber, $NumDevidedBy) function
            only for php7.0

Loop --------------------------------------------------
    while (){}
    do{}while();
    for(){}  
    
            $ = 0;
            while($ < 10){ 
                $i++;
                if ($i % 2){
                    continue;           //it goes up on loop if it is odd number
                 }
                 echo $i.'<br>';
             }
             // output will be 2,4,6,8,10

            continue - useful when using reading file line by line
            let it skip blank lines
    
    foreach($arr as $element){}
            just linke JS 
                arr.forEach(function(element){});
    
            for associative array 
                    foreach($arr as $key => $value){}  
    
   *** Alternative synta
        while (): endwhile;
        do{}while();
        for(): endfor;    
        foreach(): endforeach;    
        
        
Functions +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++        
    manual http://php.net/manual/en/
    http://php.net/manual/en/funcref.php
        
    PHP buildin Function ---------------------------------
    
        echo phpversion();
            // php versuon runing
        strtolower($name); 
            // the value of $name unchanged
        $name = ucfirst(strtolower($name);
            // $name has first letter capital
        strip_tags($input, '<br>'); 
            // 1st arg to strip off all html tag // 2nd arg leave the tag
        sort($characters); 
            // sort the array,  return boolian if sorted - passing an argument by reference
        rsort($characters); 
            // sort in reverse order
        function_exists('intdiv')
            // return boolian - arg - function name in string 
         intdiv($seconds, 60) 
            // the same as / (division) in C, don't go on fraction
         abs($sec);
            // abs value
            
    Documentation -------------------------------------------
        
        string function
        http://php.net/manual/en/book.strings.php
        array function
        http://php.net/manual/en/book.array.php
        
        bool sort ( array &$array [, int $sort_flags = SORT_REGULAR ] )
            //check & if it presets it will change original value of it.
            // so sort will change the actual cvalue of argument
            // SORT_REGULAR is difault value 
            // $sort_flags is const, if you wanna conbine 2 consts, use | (or or bitwise)
                    sort($fruits, SORT_NATURAL | SORT_FLAG_CASE);
             
        
    custon functions -------------------------------------------
    
        function fn(){
        }
    
    
    passing argument by value and reference to a function -------
        
        passing by value:
                insude function is nothing to do is out side scope therefore the value of $num unchanged
    
                $num = 2;
                function doubleIt($num){
                    return $num *=2;
                }
                $doubled = doubleIt($num);
                echo '$doubled is ' . $doubled . '<br>';    //4
                echo '$num is ' . $num . '<br>';            //2

        pass by reference:
                & is need on definition of the function
                you dont need it when you call the function
                don't need to return 
                because we are passing a reference to the actual value
                
                $num = 2;
                function doubleIt(&$num){
                    $num *=2;
                }
                $doubled = doubleIt($num);
                echo '$doubled is ' . $doubled . '<br>';    // (nothing)
                echo '$num is ' . $num . '<br>';            // 4
                var_dunp($doubled)//                        // NULL

        some more functions ------------------------------------------
        call back is the same as JS
        
        implode(); // to make strings from array
        Example #1 implode() example

                $array = array('lastname', 'email', 'phone');
                $comma_separated = implode(",", $array);
                echo $comma_separated; // lastname,email,phone


        explode();
        Example #1 explode() examples
        http://php.net/manual/en/function.explode.php

                $pizza  = "piece1 piece2 piece3 piece4 piece5 piece6";
                $pieces = explode(" ", $pizza);
                echo $pieces[0]; // piece1
                echo $pieces[1]; // piece2

                // Example 2
                $data = "foo:*:1023:1000::/home/foo:/bin/sh";
                list($user, $pass, $uid, $gid, $gecos, $home, $shell) = explode(":", $data);
                echo $user; // foo
                echo $pass; // *

        usort();
        bool usort ( array &$array , callable $value_compare_func )
                        $value_compare_func is  
                        int callback ( mixed $a, mixed $b )

                   exxample
                   // $friends  is 2 d array, 2nd array is associative array
                   // i.e. $friends [['first'=> 'Tim', 'last'=> 'Gauwn'], ['first'=>'', 'last'=> 'Gauwn']];
                   usort($friends, function($a, $b){
                        return $a ['last'] <=> $b ['last]; 
                        // <=> spaceship operator compare on ['last']
                   });
                   you could do (php7 and later)
                    return [$a['last'],$a['first']] <=> [$b['last], $b['first']]; 
                    
           
Objects and Classes ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++         
    
    class---------------------
    using key word new
    
    object -------------------
    instanciating object
        $car1 = new Car('red');
        echo car1->color; //red
    
    function & method difference  -----------------
    
    Date time function
    string date ( string $format [, int $timestamp = time() ] )
    http://php.net/manual/en/function.date.php
            $today = date("F j, Y, g:i a");                 //i.e. March 10, 2001, 5:16 pm
            
    
    dateTime class
    http://php.net/manual/en/class.datetime.php
    
        it contents methods
        $date1 = new DateTime();
        $date2 = new DateTime();
        
        $west_coast = new DateTimeZone ('America/Los_Angels
        $date2->setTimezone(west_coast);
        
        echo $date1->format('g:ia, l, F J, Y'). '<br>';


Including External files +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    
    <?php include './includes/para.html'; ?>        // ./ meands that path bigins with current folder
    <?php include_once './includes/para.html'; ?>   // if you put this it shows only the first one
    you can include / require function then eco fn(); but you must use function after require the file ( as it is external file )
    watch out with link on external file. src of link should be after it has been included, not from the external file

    4 include commands ----------------
        you can put () after the command but it is optional
        
            include / include_once
                Attempt yo continue processing even if files are missing

            requir / require_once
                stop processing if external file isn't available

            once - comand end with once prevent the file from being included more than once.
                this is essential to file contains function or class definition
                because attempt to redefine function or class triggers fatal arror
        
        *****    
        HTML should be valid after all files are merged.
        The includes files should contain HTML fragments when finally piece together to build complete web page
        the page shouldn't have multiple head and body elements
        Start with static page, then cutt and paste the HTML fragments to your include files
        ******
        
        File name extention
            include files can use any extentions
            some people use .inc to indicate the file is server side include
            But Most severs treat .inc as plain text (it can be accessed from browser, not great for sensitive contents)
            Use .inc.php (called double extention) or .php for improved security 
            Include files can be stored outside the server root for greater securite
                as long as paret in the root folder, php can access hat are stored elsewhere.
            
        link from external file           
            use variable (i.e.) $siteRoot
                use it as href="<?= $siteRoot; ?>/linked.php
            on the file the include the external file write below on the top of the file
                <? php $siteRoot = '/projectFolder/include; ?>
            so the external file which libes in /projectFolder/include/linked.php will work
    
    
        useful method 
            get_include_path();on any other file
            
                <?php echo get_include_path();
                        shows include path of the server
                        .:/php/includes:/usr/local/lib/php
                        it start with . which means search from current directory
                        : is path separater.
                        so if you store includes files in either locations, 
                        php will serch each of these inter, try to find includefiles
                        you can also change value of include file in the main_conficuraton_file_php.ini

                        you can also change at run time using function cakked
                        set_include_path()
              
              
              set_include_path() on top of main php file - runtime
              <? php set_include_path = (get_include_path() . PATH_SEPARATOR 
              . '/Liburary/WebServer/Documents/myProject/includes');
              require'include.php'; ?>
                        
                        overwrite existing path 
                        require no longer need the whole path
                        the same for any other one
                    thouh this is efficient way, recommended specify document-relative path to
                    include files rether than rely on the server's include path and more efficient ( les stime for serch)
    
                    if you use better to do it onn main_configuration_file.php
                    
